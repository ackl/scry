services:
  homer:
    image: b4bz/homer
    container_name: homer
    volumes:
      - ./homer:/www/assets
    expose:
      - 8080

  homebridge:
    image: homebridge/homebridge:latest
    container_name: homebridge
    network_mode: host
    volumes:
      - ./homebridge:/homebridge
    restart: always

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: always
    network_mode: host
    volumes:
      - ./homeassistant:/config

  noip-duc:
    image: ghcr.io/noipcom/noip-duc:latest
    container_name: noip-duc
    env_file:
      - nightingale.env
    restart: always

  xray:
    image: ghcr.io/xtls/xray-core:latest
    container_name: xray
    command: run -c /etc/xray/config.json
    volumes:
      - ./xray/config.json:/etc/xray/config.json
    ports:
      - 8888
      - 8889
    restart: always

  transmission:
    image: haugene/transmission-openvpn
    container_name: transmission
    cap_add:
      - NET_ADMIN
    volumes:
      - /mnt/usbHDD:/data
    env_file:
      - transmission.env
    logging:
        driver: json-file
        options:
            max-size: 10m
    expose:
      - 9091
    ports:
      - 51413:51413
      - 51413:51413/udp

  goaccess:
    image: allinurl/goaccess
    container_name: goaccess
    expose:
      - 7880
    volumes:
      - ./goaccess:/srv/report
      - shared-data:/srv/logs:ro
    command: "/srv/logs/access.log -o /srv/report/report.html --log-format=COMBINED --real-time-html"

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    environment:
      TZ: 'Europe/London'
      WEBPASSWORD: '${PIHOLE_PASSWORD}'
      WEB_PORT: 8081
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    expose:
      - 8081
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
      - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: lscr.io/linuxserver/swag:latest
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=Europe/London
      - URL=ackl.me
      - VALIDATION=dns
      - SUBDOMAINS=wildcard
      - DNSPLUGIN=cloudflare
      - EMAIL="contact@ackl.me"
      - EXTRA_DOMAINS= "*.nightingale.ackl.me"
      - PROPAGATION=20
    volumes:
      - ./nginx/config:/config
      - shared-data:/config/log/nginx/
      - ./goaccess:/config/www/goaccess
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - VERSION=docker
    volumes:
      - /mnt/usbHDD/plex_config:/config
      - /mnt/usbHDD/TV:/tv
      - /mnt/usbHDD:/movies
    restart: unless-stopped
    ports:
      - 32400:32400

  scrypted:
      environment:
          - SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION=Bearer ${WATCHTOWER_HTTP_API_TOKEN:-env_missing_fallback}
          - SCRYPTED_WEBHOOK_UPDATE=http://localhost:10444/v1/update

          # Avahi can be used for network discovery by passing in the host daemon
          # or running the daemon inside the container. Choose one or the other.
          # Uncomment next line to run avahi-daemon inside the container.
          # See volumes and security_opt section below to use the host daemon.
          #- SCRYPTED_DOCKER_AVAHI=true

      image: ghcr.io/koush/scrypted

      volumes:
          - /mnt/usbHDD/front_door/recordings/video:/nvr
          - /mnt/usbHDD/front_door:/server/volume
          - /var/run/dbus:/var/run/dbus


      security_opt:
          - apparmor:unconfined
      devices: [
           "/dev/dri:/dev/dri",
      ]

      container_name: scrypted
      restart: unless-stopped
      network_mode: host

      logging:
          driver: "none"
          # driver: "json-file"
          # options:
          #     max-size: "10m"
          #     max-file: "10"
      labels:
          - "com.centurylinklabs.watchtower.scope=scrypted"

  watchtower:
      environment:
          - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN:-env_missing_fallback}
          - WATCHTOWER_HTTP_API_UPDATE=true
          - WATCHTOWER_SCOPE=scrypted
          - WATCHTOWER_HTTP_API_PERIODIC_POLLS=${WATCHTOWER_HTTP_API_PERIODIC_POLLS:-true}
      image: containrrr/watchtower
      container_name: scrypted-watchtower
      restart: unless-stopped
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock
      labels:
          - "com.centurylinklabs.watchtower.scope=scrypted"
      ports:
          # The auto update port 10444 can be configured
          # Must match the port in the auto update url above.
          - 10444:8080
      # check for updates once an hour (interval is in seconds)
      command: --interval 3600 --cleanup --scope scrypted

  dufs:
      image: sigoden/dufs
      volumes:
          - '/mnt/usbHDD:/data'
      ports:
          - '5000:5000'
      command: /data -A

volumes:
  shared-data:
