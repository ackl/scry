---
- name: prereqs
  hosts: scry

  tasks:
    - name: create opt directories
      become: yes
      file:
        path: "{{ item }}"
        state: directory
        owner: andrew
        group: andrew
        mode: 0755
        recurse: yes
      with_items:
        - /opt/cache
        - /opt/mnt
        - /opt/rclone
        - /opt/caddy/ssl
        - /opt/caddy/logs
        - /opt/plex
        - /opt/nextcloud

    - name: install unzip
      become: yes
      apt:
        update_cache: yes
        name: unzip
        state: latest


- name: install rclone
  hosts: scry

  tasks:
  - name: check if rclone installed
    stat:
      path: /usr/bin/rclone
    register: stat_result

  - name: install rclone
    shell: curl https://rclone.org/install.sh | sudo bash
    args:
      warn: no
    when: not stat_result.stat.exists

  - name: Install fuse
    apt: name={{ item }} state=latest update_cache=yes
    loop: [ 'fuse' ]

  - name: make sure user_allow_other is on in fuse config
    become: yes
    shell: echo 'user_allow_other' >> /etc/fuse.conf

  - name: write the rclone config file
    template:
      src: ./config/rclone.conf
      dest: /opt/rclone/rclone.conf

  - name: write the rclone mount service
    become: yes
    template:
      src: ./systemd/rclone.service
      dest: /etc/systemd/system/rclone.service



- name: install caddy
  hosts: scry

  tasks:
  - name: Download caddy
    become: yes
    get_url:
      url: https://caddyserver.com/api/download?os=linux&arch=amd64&p=github.com%2Fcaddy-dns%2Fcloudflare&idempotency=20883093386106
      dest: /usr/local/bin/caddy
      mode: 0755

  - name: ensure libcap2-bin is installed
    become: yes
    apt:
      name: libcap2-bin
      state: latest

  - name: change setcap option so non-root can open port 443
    become: yes
    shell: setcap cap_net_bind_service=+ep /usr/local/bin/caddy

  - name: write the caddy config file
    template:
      src: ./config/Caddyfile
      dest: /opt/caddy/Caddyfile

  - name: write the caddy service
    become: yes
    template:
      src: ./systemd/caddy.service
      dest: /etc/systemd/system/caddy.service



- name: install docker
  hosts: scry
  become: yes

  tasks:
  - name: Install required system packages
    apt: name={{ item }} state=latest update_cache=yes
    loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release', 'python3-pip', 'fuse']

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/debian bullseye stable
      state: present

  - name: Update apt and install docker-ce
    apt: name={{ item }} state=latest update_cache=yes
    loop: [ 'docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose-plugin' ]

  - name: Install Docker Module for Python
    pip:
      name: docker

  - name: Pull default Docker image
    docker_image:
      name: "plexinc/pms-docker"
      source: pull

  - name: adding existing user "{{ ansible_user }}" to group docker
    user:
      name: "{{ ansible_user }}"
      groups: docker
      append: yes

  - name: ensure docker service is running
    service:
      name: docker
      state: started


- name: Create plex docker container
  hosts: scry

  tasks:
  - name: Create plex docker container
    docker_container:
      name: plex
      image: plexinc/pms-docker
      network_mode: host
      volumes:
        - /opt/plex:/config
        - /tmp:/transcode
        - /opt/mnt/dusk/media:/data
